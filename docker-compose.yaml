version: '3.3'

services:
  app-db:
    container_name: niagads-api-app-db-${API_VERSION}
    image: postgres:15
    restart: always
    ports:
      - ${PG_PORT}:5432
    environment:
      POSTGRES_USER: ${PG_ADMIN_USER}
      POSTGRES_PASSWORD: ${PG_ADMIN_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_INITDB_ARGS: --auth-host=md5 --auth-local=md5
    volumes:
      - ${PG_DATA_DIR}:/var/lib/postgresql/data

  client-app:
    container_name: niagads-api-app-${API_VERSION}
    image: niagads-api-${API_VERSION}
    depends_on:
      - app-db
    build:
      context: .
      dockerfile: ./Dockerfile     
      args:
          LOG_LEVEL: ${LOG_LEVEL}
          BUILD: ${BUILD} 
    ports:
      - '3000:3000'
      - '${PORT}:8000'  
    volumes:
      - ${APPLICATION_DIR}:/app
      # by mounting the "node_modules" we force it to be empty
      # and keep the docker container from finding node_modules installed on the host
      # https://github.com/Kartikdot/TS-Node-Docker-Starter/blob/main/docker-compose.yaml
      - ignore:/app/node_modules

volumes:
  ignore: 

# see https://github.com/ErickWendel/livereload-docker-nodejs-typescript/blob/master/Dockerfile